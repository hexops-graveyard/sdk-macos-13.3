// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.117.59 clang-1403.0.22.8.50)
// swift-module-flags: -target arm64e-apple-macos13.3 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name FamilyControls
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 1066
import Combine
import CoreServices
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import os.log
import os
@available(iOS 15.0, macOS 13.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public enum FamilyControlsError : Foundation.LocalizedError {
  case restricted
  case unavailable
  case invalidAccountType
  case invalidArgument
  case authorizationConflict
  case authorizationCanceled
  case networkError
  @available(iOS 16.0, *)
  case authenticationMethodUnavailable
  public var errorDescription: Swift.String? {
    get
  }
}
@available(iOS 16.4, macOS 13.3, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsError : Swift.RawRepresentable, Foundation.CustomNSError {
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
  public var errorUserInfo: [Swift.String : Any] {
    get
  }
  public typealias RawValue = Swift.Int
}
@available(iOS 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public enum AuthorizationStatus : Swift.Int, Swift.Codable, Swift.CustomStringConvertible {
  case notDetermined
  case denied
  case approved
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@available(iOS 16.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@objc public enum FamilyControlsMember : Swift.Int, Swift.Codable, Swift.CustomStringConvertible {
  case child
  case individual
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @available(iOS 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public class AuthorizationCenter : Combine.ObservableObject {
  public static let shared: FamilyControls.AuthorizationCenter
  @Combine.Published @_projectedValueProperty($authorizationStatus) public var authorizationStatus: FamilyControls.AuthorizationStatus {
    get
  }
  public var $authorizationStatus: Combine.Published<FamilyControls.AuthorizationStatus>.Publisher {
    get
  }
  @available(iOS, deprecated: 16.0, message: "Use requestAuthorization(for:) instead")
  public func requestAuthorization(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  #if compiler(>=5.3) && $AsyncAwait
  @available(iOS 16.0, *)
  public func requestAuthorization(for member: FamilyControls.FamilyControlsMember) async throws
  #endif
  public func revokeAuthorization(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
@available(iOS 15.0, macOS 13.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsError : Swift.Equatable {}
@available(iOS 15.0, macOS 13.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsError : Swift.Hashable {}
@available(iOS 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.AuthorizationStatus : Swift.Equatable {}
@available(iOS 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.AuthorizationStatus : Swift.Hashable {}
@available(iOS 15.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.AuthorizationStatus : Swift.RawRepresentable {}
@available(iOS 16.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsMember : Swift.Equatable {}
@available(iOS 16.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsMember : Swift.Hashable {}
@available(iOS 16.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension FamilyControls.FamilyControlsMember : Swift.RawRepresentable {}
