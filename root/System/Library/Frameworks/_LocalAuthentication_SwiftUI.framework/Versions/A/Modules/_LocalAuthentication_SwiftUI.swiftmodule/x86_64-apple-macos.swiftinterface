// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8 (swiftlang-5.8.0.117.59 clang-1403.0.22.8.50)
// swift-module-flags: -target x86_64-apple-macos13.3 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name _LocalAuthentication_SwiftUI
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 1132.100.131
import Combine
@_exported import LocalAuthentication
import LocalAuthenticationEmbeddedUI
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
@available(macOS 13.0, *)
@available(macCatalyst, unavailable)
@available(iOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public struct LocalAuthenticationView<Label> : SwiftUI.View where Label : SwiftUI.View {
  public init(context: LocalAuthentication.LAContext, @SwiftUI.ViewBuilder label: () -> Label)
  public init(_ titleKey: SwiftUI.LocalizedStringKey, context: LocalAuthentication.LAContext) where Label == SwiftUI.Text
  @_disfavoredOverload public init<S>(_ title: S, context: LocalAuthentication.LAContext) where Label == SwiftUI.Text, S : Swift.StringProtocol
  public init(reason: SwiftUI.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping ((Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void), @SwiftUI.ViewBuilder label: () -> Label)
  public init(_ title: SwiftUI.Text, reason: SwiftUI.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping ((Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)) where Label == SwiftUI.Text
  public init(_ titleKey: SwiftUI.LocalizedStringKey, reason: SwiftUI.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping ((Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)) where Label == SwiftUI.Text
  @_disfavoredOverload public init<S>(_ title: S, reason: SwiftUI.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping ((Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)) where Label == SwiftUI.Text, S : Swift.StringProtocol
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s28_LocalAuthentication_SwiftUI0aB4ViewV4bodyQrvp", 0) __<Label>
}
@available(macOS 13.0, *)
@available(macCatalyst, unavailable)
@available(iOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension LocalAuthentication.LAContext : Combine.ObservableObject {
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
}
